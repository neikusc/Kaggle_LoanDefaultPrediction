install.packages("gmp")
install.packages("gmp")
benchmark <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/CSVs/sampleSubmission.csv")
headers <- names(benchmark)[-1]
data <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/predictions.csv", header = FALSE)
id <- benchmark$id
names(data) <- headers
newdata <- cbind(id, data)
write.csv(newdata, file = "/home/neik/Kaggle/LoanDefaultPrediction/CSVs/submit_LSVC_Feb10.csv",
row.names = FALSE, quote=FALSE)
install.packages("ROCR")
install.packages("e1071")
install.packages("neuralnet")
install.packages("ROCR")
library(ROCR)
data(ROCR.simple)
pred <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
perf <- performance(pred,"tpr","fpr")
plot(perf)
perf1 <- performance(pred, "prec", "rec")
plot(perf1)
perf1 <- performance(pred, "sens", "spec")
plot(perf1)
library(ROCR)
data(ROCR.simple)
pred <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
perf <- performance(pred,"tpr","fpr")
plot(perf)
benchmark <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/CSVs/sampleSubmission.csv")
headers <- names(benchmark)[-1]
data <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/predictions_C00005.csv", header = FALSE)
id <- benchmark$id
names(data) <- headers
write.csv(newdata, file = "/home/neik/Kaggle/LoanDefaultPrediction/CSVs/submit_benchmark_C00005.csv",
row.names = FALSE, quote=FALSE)
newdata <- cbind(id, data)
write.csv(newdata, file = "/home/neik/Kaggle/LoanDefaultPrediction/CSVs/submit_benchmark_C00005.csv",
row.names = FALSE, quote=FALSE)
data <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/CSVs/thres_cross.csv", header = FALSE)
names(data) <- c("id","loss", "label", "prob1", "prob")
data1 <- data[where(data$label==1), ]$prob
typeof(data)
data1 <- data[which(data$label==1), ]$prob
hist(data1, breaks = 1200, col="lightgreen", border = "green", xlim=c(0,1), ylim = c(0,1500)
, xlab="Loss", main="Distribution of Default")
hist(data1, breaks = 1200, col="lightgreen", border = "green", xlim=c(0,1), ylim = c(0,100)
, xlab="Loss", main="Distribution of Default")
data2 <- data[which(data$label==0), ]$prob
data2 <- data[which(data$label==0), ]$prob
hist(data1, data2, breaks = 1200, col=c("lightgreen","blue"), border = "green", xlim=c(0,1), ylim = c(0,100)
, xlab="Loss", main="Distribution of Default")
hist(data1, data2, breaks = 1200, col=c("lightgreen","red"), border = "green", xlim=c(0,1), ylim = c(0,100)
, xlab="Loss", main="Distribution of Default")
hist(data1, data2, breaks = 1200, col="lightgreen", border = "green", xlim=c(0,1), ylim = c(0,100)
, xlab="Loss", main="Distribution of Default")
hist(data1, data2, breaks = 1200, col="red", add=T)
hist(data1, data2, breaks = 1200, col="lightgreen", border = "green", xlim=c(0,1), ylim = c(0,100)
, xlab="Loss", main="Distribution of Default")
hist(data1, data2, breaks = 1200, col="red", add=T)
hist(data1, data2, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,60)
, xlab="Loss", main="Distribution of Default")
hist(data1, data2, breaks = 1200, col="lightgreen", add=T)
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,60)
, xlab="Loss", main="Distribution of Default")
hist(data2, breaks = 1200, col="lightgreen", add=T)
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Loss", main="Distribution of Default")
hist(data2, breaks = 1200, col="lightgreen", add=T)
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Loss", main="Distribution of Default")
hist(data2, breaks = 1200, col="lightgreen", add=T)
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Loss", main="Distribution of Default")
hist(data2, breaks = 1200, col="lightgreen", add=T)
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Loss", main="Distribution of Default")
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Loss", main="Distribution of Default")
hist(data2, breaks = 1200, add=T)
?hist
par("mfrow" = c(1,2))
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Loss", main="Distribution of Default")
hist(data2, breaks = 1200, add=T)
par("mfrow" = c(1,2))
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Loss", main="Distribution of Default")
hist(data2, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Loss", main="Distribution of Default")
par("mfrow" = c(1,2))
hist(data1, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Prob", main="Distribution of Default=1")
hist(data2, breaks = 1200, col="red", border = "green", xlim=c(0,1), ylim = c(0,120)
, xlab="Prob", main="Distribution of Default=0")
benchmark <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/CSVs/sampleSubmission.csv")
headers <- names(benchmark)[-1]
data <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/under_sampling.csv", header = FALSE)
id <- benchmark$id
names(data) <- headers
data <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/CSVs/under_sampling.csv", header = FALSE)
id <- benchmark$id
names(data) <- headers
newdata <- cbind(id, data)
write.csv(newdata, file = "/home/neik/Kaggle/LoanDefaultPrediction/CSVs/submit_under_sampling.csv",
row.names = FALSE, quote=FALSE)
benchmark <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/CSVs/sampleSubmission.csv")
headers <- names(benchmark)[-1]
data <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/CSVs/under_sampling.csv", header = FALSE)
id <- benchmark$id
names(data) <- headers
newdata <- cbind(id, data)
write.csv(newdata, file = "/home/neik/Kaggle/LoanDefaultPrediction/CSVs/submit_under_sampling.csv",
row.names = FALSE, quote=FALSE)
benchmark <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/CSVs/sampleSubmission.csv")
headers <- names(benchmark)[-1]
data <- read.csv("/home/neik/Kaggle/LoanDefaultPrediction/predictions_C00005.csv", header = FALSE)
id <- benchmark$id
names(data) <- headers
newdata <- cbind(id, data)
write.csv(newdata, file = "/home/neik/Kaggle/LoanDefaultPrediction/CSVs/submit_benchmark_newprocess.csv",
row.names = FALSE, quote=FALSE)
install.packages("DMwR")
library("cluster", lib.loc="/usr/lib/R/library")
38*1.25
setwd('/home/neik/GitHub/Kaggle_LoanDefaultPrediction/R')
source("functions.R")
source("02.classifier.R")
source("03.fitter.R")
library(caTools)
library(caret)
set.seed(2014)
# load dataTrain
load("train_v2.Rda")
id <- sample(nrow(data), round(nrow(data)*0.67))
dataTrain <- data[id, ]
dataTest <- data[-id, ]
true_loss <- dataTest$loss
# classifying for the id of defaults
idz <- classifier(dataTrain, dataTest, 0.70)
install.packages('gbm')
source("02.classifier.R")
idz <- classifier(dataTrain, dataTest, 0.70)
source("02.classifier.R")
idz <- classifier(dataTrain, dataTest, 0.70)
source("02.classifier.R")
idz <- classifier(dataTrain, dataTest, 0.70)
length(idz)/nrow(dataTest)
length(idz)/length(which(dataTest$loss>0))
source("02.classifier.R")
source("02.classifier.R")
idz <- classifier(dataTrain, dataTest, 0.70)
length(idz)/nrow(dataTest)
length(idz)/length(which(dataTest$loss>0))
pred_loss <- fitter(dataTrain, dataTest, idz)
MAE(pred_loss, true_loss)
y_zero <- rep(0, length(true_loss))
MAE(y_zero, true_loss)
par(mfrow = c(1,2))
hist(true_loss, col = "blue", ylim=c(0,900), main="True Loss",
xlim=c(0,101), xlab = "Loss", ylab = "Frequency", breaks=101)
hist(pred_loss, col = 'green', ylim=c(0,900), main="Predicted Loss",
xlim=c(0,101), xlab = "Loss", ylab = "Frequency", breaks=101)
sum(pred_loss)/sum(true_loss)
setwd('/home/neik/GitHub/Kaggle_LoanDefaultPrediction/R')
source("functions.R")
source("02.classifier.R")
source("03.fitter.R")
library(caTools)
library(caret)
set.seed(2014)
load("train_v2.Rda")
load("test_v2.Rda")
idz <- classifier(data, dataTest, 0.70)
length(idz)/nrow(dataTest)
pred_loss <- fitter(data, dataTest, idz)
hist(data$loss, col=rgb(1, 0, 0,0.5),main="Training Set", ylim=c(0,1500), breaks=101,
xlab ="Loss", ylab ="Frequency")
hist(pred_loss, col=rgb(0, 1, 0,0.5), main="Testing Set", ylim=c(0,1500), breaks=101, add=T)
sum(pred_loss)/175843
newdata = data.frame(id = dataTest$id , loss = pred_loss)
write.csv(newdata, file = "submission.csv", row.names = FALSE, quote=FALSE)
